// tslint:disable
/**
 * Authlete API
 * Authlete API Document. 
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    AuthzDetails,
    Grant,
    GrantType,
    Pair,
    Property,
    Scope,
} from './';

/**
 * @export
 * @interface IntrospectionResponse
 */
export interface IntrospectionResponse {
    /**
     * The code which represents the result of the API call.
     * @type {string}
     * @memberof IntrospectionResponse
     */
    resultCode?: string;
    /**
     * A short message which explains the result of the API call.
     * @type {string}
     * @memberof IntrospectionResponse
     */
    resultMessage?: string;
    /**
     * The next action that the authorization server implementation should take.
     * @type {string}
     * @memberof IntrospectionResponse
     */
    action?: IntrospectionResponseActionEnum;
    /**
     * The content that the authorization server implementation can use as the value of `WWW-Authenticate` header on errors. 
     * @type {string}
     * @memberof IntrospectionResponse
     */
    responseContent?: string;
    /**
     * The client ID.
     * @type {number}
     * @memberof IntrospectionResponse
     */
    clientId?: number;
    /**
     * The client ID alias when the token request was made. If the client did not have an alias, this parameter is `null`. Also, if the token request was invalid and it failed to identify a client, this parameter is `null`. 
     * @type {string}
     * @memberof IntrospectionResponse
     */
    clientIdAlias?: string;
    /**
     * The flag which indicates whether the client ID alias was used when the token request was made. `true` if the client ID alias was used when the token request was made. 
     * @type {boolean}
     * @memberof IntrospectionResponse
     */
    clientIdAliasUsed?: boolean;
    /**
     * The time at which the access token expires. The value is represented in milliseconds since the Unix epoch (1970-01-01). 
     * @type {number}
     * @memberof IntrospectionResponse
     */
    expiresAt?: number;
    /**
     * The subject who is associated with the access token. The value of this property is `null` if the access token was issued using the flow of [Client Credentials Grant](tools.ietf.org/html/rfc6749#section-4.4). 
     * @type {string}
     * @memberof IntrospectionResponse
     */
    subject?: string;
    /**
     * The scopes covered by the access token. 
     * @type {Array<string>}
     * @memberof IntrospectionResponse
     */
    scopes?: Array<string>;
    /**
     * `true` if the access token exists. 
     * @type {boolean}
     * @memberof IntrospectionResponse
     */
    existent?: boolean;
    /**
     * true` if the access token is usable (= exists and has not expired). 
     * @type {boolean}
     * @memberof IntrospectionResponse
     */
    usable?: boolean;
    /**
     * `true` if the access token exists. 
     * @type {boolean}
     * @memberof IntrospectionResponse
     */
    sufficient?: boolean;
    /**
     * `true` if the access token can be refreshed using the associated refresh token which had been issued along with the access token. `false` if the refresh token for the access token has expired or the access token has no associated refresh token. 
     * @type {boolean}
     * @memberof IntrospectionResponse
     */
    refreshable?: boolean;
    /**
     * The extra properties associated with the access token.
     * @type {Array<Property>}
     * @memberof IntrospectionResponse
     */
    properties?: Array<Property>;
    /**
     * The client certificate thumbprint used to validate the access token. 
     * @type {string}
     * @memberof IntrospectionResponse
     */
    certificateThumbprint?: string;
    /**
     * The target resources. This represents the resources specified by the `resource` request parameters or by the `resource` property in the request object.  See \"Resource Indicators for OAuth 2.0\" for details. 
     * @type {Array<string>}
     * @memberof IntrospectionResponse
     */
    resources?: Array<string>;
    /**
     * The target resources this proeprty holds may be the same as or different from the ones `resource` property holds.  In some flows, the initial request and the subsequent token request are sent to different endpoints. Example flows are the Authorization Code Flow, the Refresh Token Flow, the CIBA Ping Mode, the CIBA Poll Mode and the Device Flow. In these flows, not only the initial request but also the subsequent token request can include the `resource` request parameters. The purpose of the `resource` request parameters in the token request is to narrow the range of the target resources from the original set of target resources requested by the preceding initial request. If narrowing down is performed, the target resources holded by the `resource` proeprty and the ones holded by this property are different. This property holds the narrowed set of target resources.  See \"Resource Indicators for OAuth 2.0\" for details. 
     * @type {Array<string>}
     * @memberof IntrospectionResponse
     */
    accessTokenResources?: Array<string>;
    /**
     * @type {AuthzDetails}
     * @memberof IntrospectionResponse
     */
    authorizationDetails?: AuthzDetails;
    /**
     * The attributes of this service that the client application belongs to. 
     * @type {Array<Pair>}
     * @memberof IntrospectionResponse
     */
    serviceAttributes?: Array<Pair>;
    /**
     * The attributes of the client. 
     * @type {Array<Pair>}
     * @memberof IntrospectionResponse
     */
    clientAttributes?: Array<Pair>;
    /**
     * The scopes property of this class is a list of scope names. The property does not hold information about scope attributes. This scopeDetails property was newly created to convey information about scope attributes. 
     * @type {Array<Scope>}
     * @memberof IntrospectionResponse
     */
    scopeDetails?: Array<Scope>;
    /**
     * The value of the `grant_id` request parameter of the device authorization request.  The `grant_id` request parameter is defined in [Grant Management for OAuth 2.0](https://openid.net/specs/fapi-grant-management.html) , which is supported by Authlete 2.3 and newer versions. 
     * @type {string}
     * @memberof IntrospectionResponse
     */
    grantId?: string;
    /**
     * @type {Grant}
     * @memberof IntrospectionResponse
     */
    grant?: Grant;
    /**
     * the flag which indicates whether the access token is for an external attachment. 
     * @type {boolean}
     * @memberof IntrospectionResponse
     */
    forExternalAttachment?: boolean;
    /**
     * the claims that the user has consented for the client application to know. 
     * @type {Array<string>}
     * @memberof IntrospectionResponse
     */
    consentedClaims?: Array<string>;
    /**
     * @type {GrantType}
     * @memberof IntrospectionResponse
     */
    grantType?: GrantType;
    /**
     * The Authentication Context Class Reference of the user authentication that the authorization server performed  during the course of issuing the access token. 
     * @type {string}
     * @memberof IntrospectionResponse
     */
    acr?: string;
    /**
     * The time when the user authentication was performed during the course of issuing the access token. 
     * @type {number}
     * @memberof IntrospectionResponse
     */
    authTime?: number;
    /**
     * The entity ID of the client. 
     * @type {string}
     * @memberof IntrospectionResponse
     */
    clientEntityId?: string;
    /**
     * Flag which indicates whether the entity ID of the client was used when the request for the access token was made.
     * @type {boolean}
     * @memberof IntrospectionResponse
     */
    clientEntityIdUsed?: boolean;
}

/**
 * @export
 * @enum {string}
 */
export enum IntrospectionResponseActionEnum {
    InternalServerError = 'INTERNAL_SERVER_ERROR',
    BadRequest = 'BAD_REQUEST',
    Unauthorized = 'UNAUTHORIZED',
    Forbidden = 'FORBIDDEN',
    Ok = 'OK'
}

