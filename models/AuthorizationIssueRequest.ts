// tslint:disable
/**
 * Authlete API
 * Authlete API Document. 
 *
 * The version of the OpenAPI document: 2.2.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    AuthorizationDetails,
    Property,
} from './';

/**
 * @export
 * @interface AuthorizationIssueRequest
 */
export interface AuthorizationIssueRequest {
    /**
     * The ticket issued from Authlete `/auth/authorization` API. 
     * @type {string}
     * @memberof AuthorizationIssueRequest
     */
    ticket: string;
    /**
     * The subject (= a user account managed by the service) who has granted authorization to the client application. 
     * @type {string}
     * @memberof AuthorizationIssueRequest
     */
    subject: string;
    /**
     * The time when the authentication of the end-user occurred. Its value is the number of seconds from `1970-01-01`. 
     * @type {string}
     * @memberof AuthorizationIssueRequest
     */
    authTime?: string;
    /**
     * The Authentication Context Class Reference performed for the end-user authentication.
     * @type {string}
     * @memberof AuthorizationIssueRequest
     */
    acr?: string;
    /**
     * The claims of the end-user (= pieces of information about the end-user) in JSON format. See [OpenID Connect Core 1.0, 5.1. Standard Claims](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) for details about the format. 
     * @type {string}
     * @memberof AuthorizationIssueRequest
     */
    claims?: string;
    /**
     * Extra properties to associate with an access token and/or an authorization code.
     * @type {Array<Property>}
     * @memberof AuthorizationIssueRequest
     */
    properties?: Array<Property>;
    /**
     * Scopes to associate with an access token and/or an authorization code. If a non-empty string array is given, it replaces the scopes specified by the original authorization request. 
     * @type {Array<string>}
     * @memberof AuthorizationIssueRequest
     */
    scopes?: Array<string>;
    /**
     * The value of the `sub` claim to embed in an ID token. If this request parameter is `null` or empty, the value of the `subject` request parameter is used as the value of the `sub` claim. 
     * @type {string}
     * @memberof AuthorizationIssueRequest
     */
    sub?: string;
    /**
     * JSON that represents additional JWS header parameters for ID tokens that may be issued based on the authorization request. 
     * @type {string}
     * @memberof AuthorizationIssueRequest
     */
    idtHeaderParams?: string;
    /**
     * @type {AuthorizationDetails}
     * @memberof AuthorizationIssueRequest
     */
    authorizationDetails?: AuthorizationDetails;
}
