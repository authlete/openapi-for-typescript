// tslint:disable
/**
 * Authlete API
 * Authlete API Document. 
 *
 * The version of the OpenAPI document: 2.2.30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    AuthorizationDetails,
    Property,
} from './';

/**
 * @export
 * @interface TokenUpdateRequest
 */
export interface TokenUpdateRequest {
    /**
     * An access token. 
     * @type {string}
     * @memberof TokenUpdateRequest
     */
    accessToken: string;
    /**
     * A new date at which the access token will expire in milliseconds since the Unix epoch (1970-01-01). If the `accessTokenExpiresAt` request parameter is not included in a request or its value is 0 (or negative), the expiration date of the access token is not changed. 
     * @type {number}
     * @memberof TokenUpdateRequest
     */
    accessTokenExpiresAt?: number;
    /**
     * A new set of scopes assigned to the access token. Scopes that are not supported by the service and those that the client application associated with the access token is not allowed to request are ignored on the server side. If the `scopes` request parameter is not included in a request or its value is `null`, the scopes of the access token are not changed. Note that `properties` parameter is accepted only when `Content-Type` of the request is `application/json`, so don\'t use `application/x-www-form-urlencoded` if you want to specify `properties`. 
     * @type {Array<string>}
     * @memberof TokenUpdateRequest
     */
    scopes?: Array<string>;
    /**
     * A new set of properties assigned to the access token. If the `properties` request parameter is not included in a request or its value is null, the properties of the access token are not changed. 
     * @type {Array<Property>}
     * @memberof TokenUpdateRequest
     */
    properties?: Array<Property>;
    /**
     * A boolean request parameter which indicates whether the API attempts to update the expiration date of the access token when the scopes linked to the access token are changed by this request. 
     * @type {boolean}
     * @memberof TokenUpdateRequest
     */
    accessTokenExpiresAtUpdatedOnScopeUpdate?: boolean;
    /**
     * The hash of the access token value. Used when the hash of the token is known (perhaps from lookup) but the value of the token itself is not. The value of the `accessToken` parameter takes precedence. 
     * @type {string}
     * @memberof TokenUpdateRequest
     */
    accessTokenHash?: string;
    /**
     * A boolean request parameter which indicates whether to update the value of the access token in the data store. If this parameter is set to `true` then a new access token value is generated by the server and returned in the response. 
     * @type {boolean}
     * @memberof TokenUpdateRequest
     */
    accessTokenValueUpdated?: boolean;
    /**
     * The flag which indicates whether the access token expires or not. By default, all access tokens expire after a period of time determined by their service. If this request parameter is `true` then the access token will not automatically expire and must be revoked or deleted manually at the service.  If this request parameter is `true`, the `accessTokenExpiresAt` request parameter is ignored. If this request parameter is `false`, the `accessTokenExpiresAt` request parameter is processed normally. 
     * @type {boolean}
     * @memberof TokenUpdateRequest
     */
    accessTokenPersistent?: boolean;
    /**
     * The thumbprint of the MTLS certificate bound to this token. If this property is set, a certificate with the corresponding value MUST be presented with the access token when it is used by a client. The value of this property must be a SHA256 certificate thumbprint, base64url encoded. 
     * @type {string}
     * @memberof TokenUpdateRequest
     */
    certificateThumbprint?: string;
    /**
     * The thumbprint of the public key used for DPoP presentation of this token. If this property is set, a DPoP proof signed with the corresponding private key MUST be presented with the access token when it is used by a client. Additionally, the token\'s `token_type` will be set to \'DPoP\'. 
     * @type {string}
     * @memberof TokenUpdateRequest
     */
    dpopKeyThumbprint?: string;
    /**
     * @type {AuthorizationDetails}
     * @memberof TokenUpdateRequest
     */
    authorizationDetails?: AuthorizationDetails;
}
