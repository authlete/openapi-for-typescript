// tslint:disable
/**
 * Authlete API
 * Authlete API Document. 
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    PushedAuthorizationRequest,
    PushedAuthorizationResponse,
    Result,
} from '../models';

export interface PushedAuthApiRequest {
    pushedAuthorizationRequest: PushedAuthorizationRequest;
}

/**
 * no description
 */
export class PushedAuthorizationEndpointApi extends BaseAPI {

    /**
     * This API creates a pushed request authorization. It authenticates the client and creates a authorization_uri to be returned by the authorization server. 
     * /api/pushed_auth_req API
     */
    pushedAuthApi({ pushedAuthorizationRequest }: PushedAuthApiRequest): Observable<PushedAuthorizationResponse>
    pushedAuthApi({ pushedAuthorizationRequest }: PushedAuthApiRequest, opts?: OperationOpts): Observable<AjaxResponse<PushedAuthorizationResponse>>
    pushedAuthApi({ pushedAuthorizationRequest }: PushedAuthApiRequest, opts?: OperationOpts): Observable<PushedAuthorizationResponse | AjaxResponse<PushedAuthorizationResponse>> {
        throwIfNullOrUndefined(pushedAuthorizationRequest, 'pushedAuthorizationRequest', 'pushedAuthApi');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<PushedAuthorizationResponse>({
            url: '/api/pushed_auth_req',
            method: 'POST',
            headers,
            body: pushedAuthorizationRequest,
        }, opts?.responseOpts);
    };

}
